@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":AnimalLogicManager" as AnimalLogicManager LOGIC_COLOR
participant ":AnimalCatalogParser" as AnimalCatalogParser LOGIC_COLOR
participant ":ResetTaskCommand" as ResetTaskCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box AnimalModel MODEL_COLOR_T1
participant "model:AnimalModel" as AnimalModel MODEL_COLOR
participant "animalCatalog:AnimalCatalog" as AnimalCatalog MODEL_COLOR
participant "animals:UniqueAnimalList" as UniqueAnimalList MODEL_COLOR
participant ":Animal" as Animal MODEL_COLOR
participant "taskList:TaskList" as TaskList MODEL_COLOR
participant "task:Task" as Task MODEL_COLOR
end box

[-> AnimalLogicManager : execute("list")
activate AnimalLogicManager

AnimalLogicManager -> AnimalCatalogParser : parseCommand("reset")
activate AnimalCatalogParser

create ResetTaskCommand
AnimalCatalogParser -> ResetTaskCommand
activate ResetTaskCommand

ResetTaskCommand --> AnimalCatalogParser
deactivate ResetTaskCommand

AnimalCatalogParser --> AnimalLogicManager :
deactivate AnimalCatalogParser

AnimalLogicManager -> ResetTaskCommand : execute(model)
activate ResetTaskCommand

ResetTaskCommand -> AnimalModel : resetTasks()
activate AnimalModel

AnimalModel -> AnimalCatalog : resetTasks()
activate AnimalCatalog

AnimalCatalog -> UniqueAnimalList : resetTasks()
activate UniqueAnimalList

UniqueAnimalList -> Animal : resetTasks()
activate Animal

Animal -> TaskList : resetTasks()
activate TaskList

loop for each task
    TaskList -> Task : updateTask(true)
    activate Task

    Task --> TaskList
    deactivate Task

end

TaskList --> Animal
deactivate TaskList

Animal --> UniqueAnimalList
deactivate Animal

UniqueAnimalList --> AnimalCatalog
deactivate UniqueAnimalList

AnimalCatalog --> AnimalModel
deactivate AnimalCatalog

AnimalModel -> AnimalModel : updateFilteredAnimalList(unused -> true)
activate AnimalModel

AnimalModel --> AnimalModel
deactivate AnimalModel

AnimalModel --> ResetTaskCommand
deactivate AnimalModel

create CommandResult
ResetTaskCommand -> CommandResult
activate CommandResult

CommandResult --> ResetTaskCommand
deactivate CommandResult

ResetTaskCommand --> AnimalLogicManager : result
deactivate ResetTaskCommand

[<--AnimalLogicManager
deactivate AnimalLogicManager
@enduml
